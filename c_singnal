import sys
import os
import signal
import subprocess
from PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QVBoxLayout

class MyApp(QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()
        self.process = None  # To hold the process reference

    def initUI(self):
        self.layout = QVBoxLayout()

        # Button to start the process
        self.start_button = QPushButton('Start Process', self)
        self.start_button.clicked.connect(self.start_process)

        # Button to send SIGINT (Ctrl+C) to the process
        self.stop_button = QPushButton('Stop Process (Ctrl+C)', self)
        self.stop_button.clicked.connect(self.stop_process)

        self.layout.addWidget(self.start_button)
        self.layout.addWidget(self.stop_button)
        self.setLayout(self.layout)

        self.setWindowTitle('PyQt Process Control')
        self.setGeometry(100, 100, 300, 200)
        self.show()

    def start_process(self):
        """Start a process (for example, running a script)."""
        if self.process is None:
            # Start the process (replace with your script or command)
            self.process = subprocess.Popen(['python', 'your_script.py'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            print(f"Started process with PID: {self.process.pid}")
        else:
            print("Process is already running.")

    def stop_process(self):
        """Send a SIGINT (Ctrl+C) to the process."""
        if self.process:
            try:
                os.kill(self.process.pid, signal.SIGINT)  # Send SIGINT to stop the process (simulates Ctrl+C)
                print(f"Sent SIGINT to process with PID: {self.process.pid}")
                self.process = None  # Reset the process reference
            except Exception as e:
                print(f"Error sending SIGINT: {e}")
        else:
            print("No process running to stop.")

if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = MyApp()
    sys.exit(app.exec_())
